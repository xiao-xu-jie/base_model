<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xujie.manager.infra.mapper.BizSourceStationMapper">
    <resultMap id="BaseResultMap" type="com.xujie.manager.infra.DO.BizSourceStation">
        <!--@Table biz_source_station-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="stationName" column="station_name" jdbcType="VARCHAR"/>
        <result property="stationUrl" column="station_url" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="VARCHAR"/>
        <result property="secret" column="secret" jdbcType="VARCHAR"/>
        <result property="stationStatus" column="station_status" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        station_name,
        station_url,
        uid,
        secret,
        station_status,
        create_time,
        update_time,
        is_delete
    </sql>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into chaoxingv2.biz_source_station(station_name, station_url, uid, secret, station_status, create_time,
        update_time, is_delete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.stationName}, #{entity.stationUrl}, #{entity.uid}, #{entity.secret}, #{entity.stationStatus},
            #{entity.createTime}, #{entity.updateTime}, #{entity.isDelete})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into chaoxingv2.biz_source_station(station_name, station_url, uid, secret, station_status, create_time,
        update_time, is_delete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.stationName}, #{entity.stationUrl}, #{entity.uid}, #{entity.key}, #{entity.stationStatus},
            #{entity.createTime}, #{entity.updateTime}, #{entity.isDelete})
        </foreach>
        on duplicate key update
        station_name = values(station_name) , station_url = values(station_url) , uid = values(uid) , secret =
        values(secret)
        , station_status = values(station_status) , create_time = values(create_time) , update_time =
        values(update_time) , is_delete = values(is_delete)
    </insert>

    <!--auto generated by MybatisCodeHelper on 2024-09-27-->
    <select id="getByAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from biz_source_station
        <where>
            <if test="id != null">
                and id=#{id,jdbcType=INTEGER}
            </if>
            <if test="stationName != null and stationName != ''">
                and station_name=#{stationName,jdbcType=VARCHAR}
            </if>
            <if test="stationUrl != null and stationUrl != ''">
                and station_url=#{stationUrl,jdbcType=VARCHAR}
            </if>
            <if test="uid != null and uid != ''">
                and `uid`=#{uid,jdbcType=VARCHAR}
            </if>
            <if test="secret != null and secret != ''">
                and secret=#{secret,jdbcType=VARCHAR}
            </if>
            <if test="stationStatus != null">
                and station_status=#{stationStatus,jdbcType=INTEGER}
            </if>
            <if test="createTime != null">
                and create_time=#{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time=#{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="isDelete != null">
                and is_delete=#{isDelete,jdbcType=INTEGER}
            </if>
        </where>
    </select>
</mapper>

